services:
  nginx-init:
    image: alpine
    container_name: nginx-init
    volumes:
      - ./nginx/nginx.conf.template:/tmp/nginx.conf.template:ro
      - ./nginx/nginx.conf:/tmp/nginx.conf
    environment:
      - METRICS_TOKEN=this_is_metrics_token
    command: >
      sh -c "
        echo 'Generating nginx.conf from template...' &&
        echo 'Token value: '$$METRICS_TOKEN &&
        sed 's/\$${METRICS_TOKEN}/'$$METRICS_TOKEN'/g' /tmp/nginx.conf.template > /tmp/nginx.conf &&
        echo 'nginx.conf generated successfully' &&
        head -20 /tmp/nginx.conf
      "

  # nginx作为唯一的外部入口
  nginx:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - nginx-init
      - node-exporter
      - cadvisor
    networks:
      - internal

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    restart: unless-stopped
    labels:
      - "monitoring.service=cadvisor"
      - "monitoring.host=web-server-1"
    networks:
      - internal

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.systemd'
      - '--collector.processes'
    restart: unless-stopped
    labels:
      - "monitoring.service=node-exporter"
      - "monitoring.host=web-server-1"
    networks:
      - internal

networks:
  internal:
    driver: bridge
      # internal: true
